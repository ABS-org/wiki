{"name":"Wiki CP","tagline":"Wiki de convenções e boas práticas para projetos da Comunidade de Práticas","body":"Wiki ABS\r\n====================\r\n**Wiki para visão geral de projetos da Atenção Básica à Saúde**\r\n\r\nEsta wiki reúne um conjunto de padrões para desenvolvimento de projetos. Incluem-se as normas e as melhores práticas para vários aspectos de um projeto, desde o levantamento de requisitos, passando pelo setup do projeto, desenvolvimento, até sua manutenção e análise qualitativa. Apesar de diferente, esta wiki teve como inspiração o guia [North](https://github.com/Snugug/north), que reune, mas com uma abrangência maior, padrões de desenvolvimento de projetos.\r\n\r\nEsta wiki é um documento vivo. Tendo em vista que normas e melhores práticas mudam, este documento também deve mudar com elas. Para referenciar e acompanhar as mudanças usaremos [SEMVER] (http://semver.org/) como parâmetro de versionamento. Contribuições são mais do que bem-vindas, desde que as [Orientações de Contribuição] (#como-contribuir) sejam seguidas.\r\n\r\n*Atualmente estamos na versão,[v0.0.1] (https://github.com/ABS-org/wiki/releases/tag/v0.0.1), que é o início de tudo. Ao passo em que a evolução for acontecendo, caminharemos para uma versão mais sólida e consistente.*\r\n\r\n# Tabela de Conteúdo\r\n\r\n1. [Guias de Alinhamento](#guias-de-alinhamento)\r\n  * [Versionamento](#versionamento)\r\n    * [Tags and Releases](#tags-and-releases)\r\n    * [Git Submódulos](#git-submódulos)\r\n    * [Branches](#branches)\r\n  * [Visual Design](#visual-design)\r\n    * [Style Guide](#)\r\n    * [Layout Guide](#)\r\n    * [Component Guide](#)\r\n    * [Tipografia](#)\r\n    * [Iconografia](#)\r\n  * [Código](#código)\r\n    * [Stylesheets](#)\r\n      * [Convenções](#)\r\n      * [Padrões e Mixins](#)\r\n    * [Markup](#)\r\n      * [HTML Semantics](#)\r\n      * [Temas](#)\r\n      * [Layouts](#)\r\n      * [Partials](#)\r\n      * [Componentes](#)\r\n      * [Elementos](#)\r\n        * [Tipos](#)\r\n        * [States](#)    \r\n2. [Gerenciamento](#gerenciamento)\r\n  * [Ferramentas](#ferramentas)\r\n3. [Manutenção](#manutenção)\r\n  * [Testes](#testes)\r\n  * [Performance](#performance)\r\n  * [Acessibilidade](#acessibilidade)\r\n4. [Análise](#análise)\r\n  * [Google Analytics](#google-analytics)\r\n  * [Desempenho](#desempenho)\r\n5. **Links para consulta**\r\n  * [Princípios para escrever CSS de forma consistente](http://tableless.com.br/principios-para-escrever-css-de-forma-consistente/)\r\n  * **Drupal Commons**\r\n    * [Releases](https://drupal.org/node/2067473)\r\n    * [Issues](https://drupal.org/node/2067477)\r\n6. [Como Contribuir](#como-contribuir)\r\n  * [Requisitos](#requisitos)\r\n  * [Issues](#issues)\r\n    * [Criando uma Issue](#criando-uma-issue)\r\n    * [Informando um Bug](#informando-um-bug)\r\n\r\n# Guias de Alinhamento\r\n\r\nSão convenções para facilitar o desenvolvimento. São usadas para [Versionamento](#versionamento), [Visual Design](#visual-design) e para manter o [Código](#código) consistente, com padrões pré-estabelecidos.\r\n\r\n## Versionamento\r\n\r\nUsaremos [SEMVER] (http://semver.org/) (Semantic Versioning), e dividiremos cada sprint, em uma versão específica. É preciso ter noção do quanto a implementação irá impactar na aplicação como um todo. Assim podemos passar da *v0.0.1* direto para *v0.0.2* ou para *v0.0.15*, dependendo do tamanho da implementação feita, sempre seguindo as convenções do [SEMVER] (http://semver.org/).\r\n\r\nO versionamento é importante principalmente quando se tem vários projetos correlacionados, em que um depende do outro para funcionar. Assim podemos referenciar uma dependência a uma versão específica e saber que features a versão desta dependência proporciona, se é estável ou não etc. Assim, a cada nova versão de uma dependência, teremos a escolha integra-la ou não em nosso projeto, sabendo com precisão seu estágio e o que ela proporciona.\r\n\r\n### Tags and Releases\r\n\r\n[Tags](http://git-scm.com/book/pt-br/Git-Essencial-Tagging) e [Releases](https://help.github.com/articles/creating-releases) tem como objetivo referenciar um estágio do desenvolvimento. A diferença entra elas, apesar de ambas serem \"tags de referência\", é que a release representa mudanças significativas no contexto da aplicação, enquanto a tag representa um estágio menos significativo. Pode-se dizer que uma release é um conjunto de tags compiladas.\r\n\r\n### GIT Submódulos\r\n\r\nOs [Submódulos do GIT](http://git-scm.com/book/pt-br/Ferramentas-do-Git-Subm%C3%B3dulos) funcionam basicamente como um repositório GIT dentro de outro, assim podemos ter um *superprojeto* contendo vários repositórios versionados de forma independente.\r\n\r\n### Branches\r\n\r\n## Visual Design\r\n\r\n## Código\r\n\r\n# Gerenciamento\r\n\r\n[Ferramentas](#ferramentas) e explicação do(s) workflow(s) utilizados para gerenciar os projetos.\r\n\r\n## Ferramentas\r\n\r\n# Manutenção\r\n\r\nSobre as formas de [Teste](#testes), como melhorar a [Performance](#performance) e tornar a aplicação [Acessível](#acessibilidade) aos diferentes disposivos e pessoas com deficiência.\r\n\r\n## Testes\r\n\r\n## Performance\r\n\r\n## Acessibilidade\r\n\r\n# Análise\r\n\r\n[Google Analytics](#google-analytics) e outras ferramentas para mensurar resultados e melhorar o [Desempenho](#desempenho) da aplicação.\r\n\r\n## Google Analytics\r\n\r\n## Desempenho\r\n\r\n# Como Contribuir\r\n\r\nPara contribuir é necessário ter as ferramentas listadas na seção de [Requisitos](#requisitos). Caso precise de ajuda e sua dúvida não esteja respondida nesta wiki, talvez a seção [Issues](#issues) poderá lhe ajudar.\r\n\r\n## Requisitos\r\n\r\n## Issues\r\n\r\nSão questões relacionadas ao projeto. Propostas de feature, aviso para um bug encontrado ou dúvidas. É possível [abrir uma issue](https://github.com/ABS-org/wiki/issues) e iniciar uma discussão para ter a dúvida respondida, bug corrigido ou feature implementada.\r\n\r\n### Criando uma Issue\r\n\r\n### Informando um Bug\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}